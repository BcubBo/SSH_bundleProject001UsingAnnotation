<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
<!-- 	<bean
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties"></property>
	</bean>	 -->	
	<!-- 配置dataSource -->
	<!-- dbcp/c3po/proxool -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="jdbc.oracle.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:bcubbo"></property>
		<property name="user" value="bcubbo3"></property>
		<property name="password" value="BcubBo001"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="minPoolSize" value="10"></property>
		<property name="checkoutTimeout" value="10000"></property>	
		
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
<!-- 		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property> -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<!-- 参数 -->
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.default_schema">BCUBBO3</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
			</props>
		</property>
		<!-- 配置映射文件通过列举所有文件位置的方式 -->
<!-- 		<property name="mappingResources">
			<list>
				<value>po/BizClaimVoucher.hbm.xml</value>
				<value>po/BizCheckResult.hbm.xml</value>
				<value>po/BizClaimVoucherDetail.hbm.xml</value>
				<value>po/SysEmployee.hbm.xml</value>
				<value>po/SysDepartment.hbm.xml</value>
				<value>po/SysPosition.hbm.xml</value>
			</list>
		</property> -->
		<!-- 简便方法,通过映射目录位置来查找配置文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:po/</value>
			</list>
		</property>
	</bean>
<!-- 	<bean id="employeeDao" class="dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean> -->
	<bean id="employeeDao" class="dao.impl.EmployeeDaoImpl" p:sessionFactory-ref="sessionFactory"></bean>
	<bean id="claimVoucherDao" class="dao.impl.ClaimVoucherDaoImpl" p:sessionFactory-ref="sessionFactory"></bean>
	<bean id="employeeBiz" class="biz.impl.EmployeeBizImpl" p:sessionFactory-ref="sessionFactory" p:employeeDao-ref="employeeDao" ></bean>
	<bean id="claimVoucherBiz" class="biz.impl.ClaimVoucherBizImpl" p:claimVoucherDao-ref="claimVoucherDao"></bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager" p:sessionFactory-ref="sessionFactory">
	</bean>

	<!-- 事务工作状态的描述并处理事务的内容的设置-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="save*" propagation="SUPPORTS" />
			<tx:method name="add*" isolation="READ_COMMITTED"/>
			<tx:method name="get*"/>
			<tx:method name="update*" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" no-rollback-for="java.lang.RuntimeException"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(public * biz..*(..))" id="serviceMethod" ></aop:pointcut>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" ></aop:advisor>
	</aop:config>

</beans>
